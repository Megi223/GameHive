<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lives</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    .heart {
      font-size: 2rem;
      margin: 0 5px;
    }
    .heart-full {
      color: red;
    }
    .heart-empty {
      color: lightgray;
    }
  </style>
</head>
<body>
    <%- include('./partials/navbar.ejs') %>
  <div class="container mt-5 text-center">
    

    <h1 class="text-center mb-4">Games</h1>
    
    <div class="row">
      <% games.forEach(game => { %>
        <div class="col-md-4 mb-4">
          <div class="card h-100">
            <img
              src="<%= game.thumbnailUrl %>"
              class="card-img-top"
              alt="<%= game.name %> Thumbnail"
              style="object-fit: cover; height: 100%;"
            />
            <div class="card-body d-flex flex-column">
              <h5 class="card-title"><%= game.name %></h5>
              <p class="card-text"><%= game.description %></p>
              <p class="card-text">
                <strong>Rules:</strong> <%= game.rules %>
              </p>
              <p class="card-text">
                <strong>Max Players:</strong> 
                <%= game.maxPlayers %> 
                <i class="bi bi-people-fill"></i>
              </p>
              <div class="mt-auto">
                <button class="btn btn-primary w-100 open-game-modal" data-game-id="<%= game._id %>" data-max-players="<%= game.maxPlayers %>" data-game-name="<%= game.name.replace(/\s/g,'') %>">
                    Play
                  </button>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Modal Dialog -->
  <div class="modal fade" id="gameModal" tabindex="-1" aria-labelledby="gameModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="container mt-3">
            <div id="alert-banner" class="alert d-none position-relative p-3" role="alert">
              <span id="alert-message"></span>
              <div
                id="alert-progress"
                class="progress-bar position-absolute bottom-0 start-0 end-0"
                style="height: 4px; background-color: #dc3545; transition: width 0.5s linear;"
              ></div>
            </div>
          </div>
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="gameModalLabel">Invite Others to Play</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="input-group mb-3">
            <input type="text" class="form-control" id="friend-search" placeholder="Search friends...">
            <button class="btn btn-outline-secondary" id="search-btn">Search</button>
          </div>
          <ul class="list-group" id="friend-list">
            <!-- Friends will be dynamically added here -->
          </ul>
        </div>
        <div class="modal-footer">
            <form id="play-form" action="/games/start" method="POST" class="d-inline">
                <input id="formGameId" type="hidden" name="gameId" value="">
                <input id="formGameName" type="hidden" name="gameName" value="">
                <input type="hidden" id="players" name="players" value="">
                <button type="submit" id="play-btn" class="btn btn-success">Play</button>
            </form>
        </div>
      </div>
    </div>
  </div>
  </div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
  
  <!--Script for handling the modal dialog with friends-->
  <script>
    function showAlert(message, type, duration = 3000) {
        const banner = document.getElementById('alert-banner');
        const messageSpan = document.getElementById('alert-message');
        const progressBar = document.getElementById('alert-progress');

        banner.className = `alert alert-${type} position-relative`;
        messageSpan.textContent = message;
        banner.classList.remove('d-none');

        progressBar.style.transition = `width ${duration}ms linear`;
        progressBar.style.width = '100%';

        setTimeout(() => {
          progressBar.style.width = '0%';
        }, 10);

        setTimeout(() => {
          banner.classList.add('d-none');
          progressBar.style.width = '100%'; 
        }, duration);
    }
    const friends = JSON.parse(`<%- JSON.stringify(friends) %>`); 
    let selectedFriends = new Set();
    let maxPlayers = 0;

    document.addEventListener('click', async (event) => {
      if (event.target.classList.contains('open-game-modal')) {
        const gameId = event.target.dataset.gameId;
        const gameName = event.target.dataset.gameName;
        maxPlayers = parseInt(event.target.dataset.maxPlayers, 10);

        selectedFriends.clear();
        updateFriendList();

        const gameModal = new bootstrap.Modal(document.getElementById('gameModal'));
        document.getElementById('formGameId').value = gameId;
        document.getElementById('formGameName').value = gameName;
        document.getElementById('play-btn').dataset.gameId = gameId;
        document.getElementById('play-btn').dataset.gameName = gameName;
        gameModal.show();
      }

      if (event.target.classList.contains('add-friend-btn')) {
        const friendId = event.target.dataset.friendId;
        if (selectedFriends.size < maxPlayers - 1) {
          selectedFriends.add(friendId);
          event.target.classList.replace('btn-success', 'btn-danger');
          event.target.textContent = '-';
          event.target.classList.replace('add-friend-btn', 'remove-friend-btn');
        } else {
          showAlert('Maximum players reached.', "danger");
        }
      }

      else if (event.target.classList.contains('remove-friend-btn')) {
        const friendId = event.target.dataset.friendId;
        selectedFriends.delete(friendId);
        event.target.classList.replace('btn-danger', 'btn-success');
        event.target.textContent = '+';
        event.target.classList.replace('remove-friend-btn', 'add-friend-btn');
      }

      else if (event.target.id === 'play-btn') {
        
    event.preventDefault(); // Prevent default form submission for dynamic modification

    // Set the form inputs dynamically
    const gameId = document.getElementById('formGameId').value 
    const gameName = document.getElementById('formGameName').value
        const form = document.getElementById('play-form')
        document.getElementById('players').value = JSON.stringify(Array.from(selectedFriends));
    // Set the form's action dynamically
    //form.action = `/${gameName}/play/${gameId}`; // Adjust URL as needed

    // Submit the form after setting dynamic values
    form.submit();

      }
    });

    function updateFriendList() {
      const friendList = document.getElementById('friend-list');
      friendList.innerHTML = friends
        .map(friend => `
          <li class="list-group-item justify-content-between align-items-center friend-list-item">
            <span>${friend.name}</span>
            <button class="btn btn-success btn-sm add-friend-btn" data-friend-id="${friend._id}">+</button>
          </li>
        `)
        .join('');
    }

    document.getElementById('friend-search').addEventListener('input',async (e) => {
      const searchTerm = e.target.value.toLowerCase();
      const response = await fetch(`/friends/search?searchTerm=${encodeURIComponent(searchTerm)}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (!response.ok) {
      throw new Error('Error fetching friends');
    }

    const filteredFriends = await response.json();

      const friendList = document.getElementById('friend-list');
      friendList.innerHTML = filteredFriends
        .map(friend => `
          <li class="list-group-item friend-list-item">
            <span>${friend.name}</span>
            <button class="btn btn-success btn-sm add-friend-btn" data-friend-id="${friend._id}">+</button>
          </li>
        `)
        .join('');
    });
  </script>
</body>
</html>
