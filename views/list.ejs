<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Friends List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  </head>
<body>
  <%- include('./partials/navbar.ejs') %>
  <div class="container mt-5">
    <div class="d-flex justify-content-center mb-1 position-relative">
      <div class="input-group" style="max-width: 600px;">
        <input
          type="text"
          id="search-input"
          class="form-control rounded-pill"
          placeholder="Search users..."
          aria-label="Search users"
          style="border-radius: 20px;"
        />
        <button class="btn btn-primary rounded-pill ms-2" id="search-btn"> <i class="bi bi-search"></i>  Search</button>
      </div>
    </div>
  
    <ul id="suggestions" class="list-group position-relarive d-none" style="max-width: 600px; margin: 0 auto; z-index: 1000;"></ul>
  
    <div class="container mt-3">
      <div id="alert-banner" class="alert d-none position-relative p-3" role="alert">
        <span id="alert-message"></span>
        <div
          id="alert-progress"
          class="progress-bar position-absolute bottom-0 start-0 end-0"
          style="height: 4px; background-color: #dc3545; transition: width 0.5s linear;"
        ></div>
      </div>
    </div>
    <h1>Your Friends</h1>
    <div class="row">
      <% friends.forEach(friend => { %>
        <div class="col-12 mb-3">
          <div class="card p-2">
            <div class="d-flex align-items-center">
              <img
                src="<%= friend.profilePicture %>"
                alt="Profile Picture"
                class="rounded-circle"
                style="width: 50px; height: 50px; object-fit: cover; margin-right: 15px;"
              />
              <span class="flex-grow-1"><%= friend.name %></span>
              <div>
                <button
                  class="btn btn-danger btn-sm remove-btn"
                  data-id="<%= friend._id %>"
                >
                  Remove
                </button>
                <a href="/users/<%= friend._id %>" class="btn btn-secondary btn-sm">
                  View Profile
                </a>
               
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
  function showAlert(message, type, duration = 3000) {
    const banner = document.getElementById('alert-banner');
    const messageSpan = document.getElementById('alert-message');
    const progressBar = document.getElementById('alert-progress');

    banner.className = `alert alert-${type} position-relative`;
    messageSpan.textContent = message;
    banner.classList.remove('d-none');

    progressBar.style.transition = `width ${duration}ms linear`;
    progressBar.style.width = '100%';

    setTimeout(() => {
      progressBar.style.width = '0%';
    }, 10);

    setTimeout(() => {
      banner.classList.add('d-none');
      progressBar.style.width = '100%'; 
    }, duration);
  }

  document.querySelectorAll('.remove-btn').forEach(button => {
      button.addEventListener('click', async (e) => {
        const friendId = e.target.getAttribute('data-id');
        const response = await fetch('/friends/remove', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ friendId }),
        });

        const data = await response.json();
        showAlert(data.message, "danger");
        if (data.message === 'Friend removed successfully.') {
          e.target.closest('.card').remove();  
        }
      });
    });


    document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-input');
    const searchBtn = document.getElementById('search-btn');
    const suggestionsList = document.getElementById('suggestions');
    const friendsList = document.getElementById('friends-list');

    async function fetchSuggestions(query) {
      if (!query) {
        suggestionsList.classList.add('d-none');
        return;
      }

      try {
        const response = await fetch(`/friends/search?searchTerm=${encodeURIComponent(query)}`);
        const results = await response.json();

        if (response.ok) {
          displaySuggestions(results);
        } else {
          console.error('Error fetching suggestions:', results.message);
        }
      } catch (error) {
        console.error('Error fetching suggestions:', error);
      }
    }

    function displaySuggestions(results) {
  suggestionsList.innerHTML = '';
  if (results.length === 0) {
    suggestionsList.classList.add('d-none');
    return;
  }

  suggestionsList.classList.remove('d-none');
  results.forEach(friend => {
    const li = document.createElement('li');
    li.className = 'list-group-item d-flex align-items-center';

    const img = document.createElement('img');
    img.src = friend.profilePicture 
    img.alt = friend.name;
    img.className = 'rounded-circle me-2';
    img.style.width = '30px';
    img.style.height = '30px';
    img.style.objectFit = 'cover';

    const span = document.createElement('span');
    span.textContent = friend.name;

    li.appendChild(img);
    li.appendChild(span);

    li.addEventListener('click', () => {
      searchInput.value = friend.name;
      suggestionsList.classList.add('d-none');
      performSearch(friend.name);
    });

    suggestionsList.appendChild(li);
  });
}

    async function performSearch(query) {
    if (!query) {
      showAlert('Please enter a search term.','danger');
      return;
    }

    try {
      const response = await fetch(`/friends/search?searchTerm=${encodeURIComponent(query)}`);
      const results = await response.json();

      if (response.ok) {
        if (results.length === 1) {
          // If exactly one result matches, redirect to the profile page
          window.location.href = `/users/${results[0]._id}`;
        } else if (results.length > 1) {
          showAlert('Multiple users found. Please refine your search.', 'danger');
        } else {
          showAlert('No users found.', 'secondary');
        }
      } else {
        console.error('Error fetching friends:', results.message);
      }
    } catch (error) {
      console.error('Error performing search:', error);
    }
  }
    searchInput.addEventListener('input', () => fetchSuggestions(searchInput.value.trim()));
    searchBtn.addEventListener('click', () => performSearch(searchInput.value.trim()));
  });
  </script>
</body>
</html>