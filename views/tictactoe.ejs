<style>
    body {
  font-family: Arial, sans-serif;
  text-align: center;
  margin-top: 50px;
}

.board {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(3, 100px);
  gap: 5px;
  justify-content: center;
  margin: 20px auto;
}

.cell {
  width: 100px;
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #333;
  font-size: 2rem;
  cursor: pointer;
}

.cell:hover {
  background-color: #f0f0f0;
}

.cell:empty:hover {
  background-color: #ddd;
}
</style>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
</head>
<body>
    <%- include('./partials/navbar.ejs') %>
  <h1>Tic Tac Toe</h1>
  <div id="status">Waiting for players...</div>
  <div id="board" class="board">

  </div>
  <button id="leave-game-btn" class="btn btn-danger">Leave Game</button>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    const socket = window.socket
    const statusElement = document.getElementById('status');
    const roomName = "<%= gameId %>"
    const userID = `<%= userID %>`;
    let playerSymbol = null;
    
    socket.emit('user-joined', roomName, userID)
    socket.on('user-count', (data)=>{
        console.log("user count received " + data.userCount)
        if(data.userCount == 2) {
            const boardElement = document.getElementById('board');
            for (let i = 0; i < 9; i++) {
              const cell = document.createElement('div');
              cell.classList.add('cell');
              cell.dataset.index = i;
              boardElement.appendChild(cell);
              cell.addEventListener('click', () => {
                if (playerSymbol) {
                  const boardArr = Array.from(boardElement.children).map(cell => ({
                    index: cell.dataset.index, 
                    value: cell.textContent.trim() 
                  }));
                  socket.emit('make-move', { index: i, room: roomName, move: playerSymbol, board: boardArr });
                }
              });
            }
        }
    })
  
    socket.on('game-update', ({ board, move }) => {
      console.log("in game update")
      const boardElement = document.getElementById('board');
      Array.from(boardElement.children).forEach((cell, index) => {
        cell.textContent = board[index].value;
      });
      statusElement.textContent = move === playerSymbol
        ? 'Your turn'
        : `Waiting for Player ${move}`;
    });

    socket.on('player-symbol-assigned', ({symbol}) => {
      console.log("player symbol is: " + symbol)
      playerSymbol = symbol;
      statusElement.textContent = `You are Player ${playerSymbol}`;
    });

    socket.on('game-over', ({ board, winner }) => {
      console.log('in game over')
      const boardElement = document.getElementById('board');
      Array.from(boardElement.children).forEach((cell, index) => {
        cell.textContent = board[index].value;
      });
      statusElement.textContent = winner === 'Draw' ? 'It\'s a Draw!' : `Player ${winner} wins!`;
    });

    document.getElementById('leave-game-btn').addEventListener('click', () => {
      const boardElement = document.getElementById('board');
      const boardArr = Array.from(boardElement.children).map(cell => ({
                    index: cell.dataset.index, 
                    value: cell.textContent.trim() 
                  }));
      socket.emit('leave-game', {board: boardArr, room: roomName}); 
      window.location.href = '/games/all'; 
    });
  </script>
</body>
</html>
